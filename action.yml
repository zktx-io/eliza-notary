name: Eliza Notary
description: Eliza Notary is a GitHub Action that harnesses community-driven insights to detect vulnerabilities in smart contracts. It automatically audits code changes and generates a detailed report.
branding:
  color: blue
  icon: shield

permissions:
  issues: write
  contents: read

inputs:
  project-path:
    description: 'Path to the project'
    required: true
  report-path:
    description: 'Path to save the audit report'
    required: true
  sqlite-path:
    description: 'Path to the SQLite database (db.sqlite)'
    required: false
  character-path:
    description: 'Path to the character files (character.json)'
    required: false
  force-audit:
    description: 'Force audit execution (true/false)'
    required: false
    default: 'false'

runs:
  using: 'composite'
  steps:
    - name: Detect Command Type
      shell: bash
      run: |
        if [[ "${{ inputs.force-audit }}" == "true" ]]; then
          echo "ACTION_TYPE=audit" >> $GITHUB_ENV
        else
          if [[ "${{ github.event_name }}" == "issue_comment" ]]; then
            BODY="${{ github.event.comment.body }}"
          else
            BODY="${{ github.event.issue.body }}"
          fi

          if [[ "$BODY" == *"/eliza help"* ]]; then
            echo "ACTION_TYPE=help" >> $GITHUB_ENV
          elif [[ "$BODY" == *"/eliza audit"* ]]; then
            echo "ACTION_TYPE=audit" >> $GITHUB_ENV
          elif [[ "$BODY" == *"/eliza summary"* ]]; then
            echo "ACTION_TYPE=summary" >> $GITHUB_ENV
          fi
        fi

    - name: Post help message as comment on issue
      if: env.ACTION_TYPE == 'help'
      uses: actions/github-script@v6
      with:
        script: |
          const commentBody = `
          \`\`\`
          Usage: /eliza [command] [options]

          Commands:
            /eliza help              Display available commands and their descriptions.
            /eliza audit model=[openai|deepseek]
                                     Perform an audit of the repository's code.
                                     The 'model' option must be either 'openai' or 'deepseek'.
            /eliza summary model=[option]
                                     Summarize the issue content using AI.
                                     The 'model' option allows you to choose an AI model for summarization.
          \`\`\`
          `;
          
          const issueNumber = context.payload.issue ? context.payload.issue.number : context.payload.pull_request.number;
          await github.rest.issues.createComment({
            ...context.repo,
            issue_number: issueNumber,
            body: commentBody
          });

    - name: Stop workflow if help command was executed
      if: env.ACTION_TYPE == 'help'
      shell: bash
      run: exit 0

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Checkout another repository
      uses: actions/checkout@v4
      with:
        repository: zktx-io/eliza-notary
        path: ./external-repo

    - name: Set up Homebrew
      if: env.ACTION_TYPE == 'audit'
      uses: Homebrew/actions/setup-homebrew@master

    - name: Install Sui
      if: env.ACTION_TYPE == 'audit'
      shell: bash
      run: brew install sui

    - name: Run Sui Move Test
      if: env.ACTION_TYPE == 'audit'
      shell: bash
      working-directory: ${{ inputs.project-path }}
      run: |
        set +e
        sui move test > test_results.txt 2>&1
        set -e
        cat test_results.txt

    - name: Install and Build Project
      if: env.ACTION_TYPE == 'audit' || env.ACTION_TYPE == 'summary'
      shell: bash
      working-directory: ./external-repo
      env:
        PROJECT_PATH: ${{ inputs.project-path }}
        REPORT_PATH: ${{ inputs.report-path }}
        SQLITE_PATH: ${{ inputs.sqlite-path }}
        CHARACTER_PATH: ${{ inputs.character-path }}
      run: |
        npm install
        npm run build
        node dist/index.js

    - name: Upload Report Artifact
      uses: actions/upload-artifact@v4
      with:
        name: audit-report
        path: "${{ inputs.project-path }}/report.md"

    - name: Upload Report as Release Asset
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2.0.8
      with:
        files: "${{ inputs.project-path }}/report.md"